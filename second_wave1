```{r}
library(tidyverse)
library(ABSEIR)
```




```{r}
covid <- read.csv("D:/Diss Track/owid-covid-data(1).csv")
coviduk <- covid %>% filter(location=="United Kingdom")
coviduk$date <- as.Date(coviduk$date)
day1 = as.Date("2020-01-31")
coviduk <- coviduk %>% mutate(day = as.numeric(date-day1))
two_waves2 <- coviduk[1:300,]
```


```{r}
two_waves2 %>% ggplot() + geom_point(aes(day,new_cases),colour="red")
```

```{r}
data_modeltw2 <- DataModel(two_waves2$new_cases,
                        type="identity",
                        compartment="I_star",
                        cumulative=FALSE)

lockdown1 <-  two_waves2$day >  60

bump2 <- cumsum(two_waves2$day > 278)

tests2 <- two_waves2$new_tests_smoothed_per_thousand

partlinear_interventiontw2 <- c(cumsum(lockdown1[1:90]),rep(30,60),rep(0,150))

partlinear_interventiontw2.1 <- c(rep(1,10),cumsum(lockdown1[11:130]),rep(70,50),rep(0,120))

ruleof6 <- c(rep(0,150),rep(1,130),rep(0,20))

tw2exposure_model_1 <- ExposureModel(matrix(cbind(1,partlinear_interventiontw2,bump2),nrow=nrow(two_waves2)),
                                  nTpt=nrow(two_waves2),
                                  nLoc=1,
                                  betaPriorPrecision=0.5,
                                  betaPriorMean=0)

tw2exposure_model_2 <- ExposureModel(matrix(cbind(1,partlinear_interventiontw2,bump2,ruleof6),nrow=nrow(two_waves2)),
                                  nTpt=nrow(two_waves2),
                                  nLoc=1,
                                  betaPriorPrecision=0.5,
                                  betaPriorMean=0)

tw2exposure_model_3 <- ExposureModel(matrix(cbind(c(rep(1,150),rep(0,150)),c(rep(0,150),rep(1,150)),partlinear_interventiontw2,bump2),nrow=nrow(two_waves2)),
                                  nTpt=nrow(two_waves2),
                                  nLoc=1,
                                  betaPriorPrecision=0.5,
                                  betaPriorMean=0)

tw2exposure_model_4 <- ExposureModel(matrix(cbind(c(rep(1,150),rep(0,150)),c(rep(0,150),rep(1,150)),partlinear_interventiontw2,ruleof6,bump2),nrow=nrow(two_waves2)),
                                  nTpt=nrow(two_waves2),
                                  nLoc=1,
                                  betaPriorPrecision=0.5,
                                  betaPriorMean=0)

reinfection_model <- ReinfectionModel("SEIR")

distance_model <- DistanceModel(list(matrix(0)))

initial_value_container <- InitialValueContainer(S0=first_wave$population[1], E0=1,I0=1,R0=0)

transition_priors = ExponentialTransitionPriors(p_ei = 1-exp(-1/5.5), 
                                     p_ir= 1-exp(-1/10),
                                     p_ei_ess = 100,
                                     p_ir_ess = 10)

sampling_control = SamplingControl(seed = 123122, 
                                   n_cores = 8,
                                   algorithm="Beaumont2009",
                                   list(batch_size = 2000,
                                           epochs = 1e6,
                                           max_batches = 100,
                                           shrinkage = 0.99,
                                           multivariate_perturbation=FALSE,
                                           keep_compartments = TRUE
                                         )
                                   )
```

```{r}
tw2_result1 <- SpatialSEIRModel(data_modeltw2,
                          tw2exposure_model_1,
                          reinfection_model,
                          distance_model,
                          transition_priors,
                          initial_value_container,
                          sampling_control,
                          samples = 100,
                          verbose = 0)

tw2_simulations1 <- epidemic.simulations(tw2_result1,replicates=50, verbose = FALSE)
```

```{r}
tw2_runtime2 = system.time(tw2_result2 <- SpatialSEIRModel(data_modeltw2,
                          tw2exposure_model_2,
                          reinfection_model,
                          distance_model,
                          transition_priors,
                          initial_value_container,
                          sampling_control,
                          samples = 100,
                          verbose = 0))

tw2_simulations2 <- epidemic.simulations(tw2_result2,replicates=50, verbose = FALSE)
```

```{r}
tw2_runtime3 = system.time(tw2_result3 <- SpatialSEIRModel(data_modeltw2,
                          tw2exposure_model_3,
                          reinfection_model,
                          distance_model,
                          transition_priors,
                          initial_value_container,
                          sampling_control,
                          samples = 100,
                          verbose = 0))

tw2_simulations3 <- epidemic.simulations(tw2_result3,replicates=50, verbose = FALSE)
```

```{r}
tw2exposure_model_4 <- ExposureModel(matrix(cbind(c(rep(1,150),rep(0,150)),c(rep(0,150),rep(1,150)),partlinear_interventiontw2.1,bump2),nrow=nrow(two_waves2)),
                                  nTpt=nrow(two_waves2),
                                  nLoc=1,
                                  betaPriorPrecision=0.5,
                                  betaPriorMean=0)
```
```{r}
tw2_runtime4 = system.time(tw2_result4 <- SpatialSEIRModel(data_modeltw2,
                          tw2exposure_model_4,
                          reinfection_model,
                          distance_model,
                          transition_priors,
                          initial_value_container,
                          sampling_control,
                          samples = 100,
                          verbose = 0))

tw2_simulations4 <- epidemic.simulations(tw2_result4,replicates=50, verbose = FALSE)
```


```{r}
summary(tw2_result4)
```

```{r}
adapted <- Rsim(seed=36363,params=list(beta_SE_1=c(-0.823,-2.1,-0.05,-1.777),gamma_EI=0.119,gamma_IR=0.052),tw2exposure_model_4,
                          reinfection_model,
                          distance_model,
                          transition_priors,
                          initial_value_container)
plot(adapted$I_star)
lines(two_waves2$new_cases)
```


```{r}
plotPosteriorPredictivetw2 = function(simulations, main)
{
  allSimulatedI_star = sapply(simulations$simulationResults, function(x){x$I_star})
  
  lowerQuantile = apply(allSimulatedI_star, 1, quantile, probs = c(0.025))
  posteriorMean = apply(allSimulatedI_star, 1, mean)
  upperQuantile = apply(allSimulatedI_star, 1, quantile, probs = c(0.975))
  
  
  plot(two_waves2$new_cases,
       xlab = "Epidemic Day", ylab = "New Cases", main = main)
  lines(upperQuantile, lty = 2, col = "blue")
  lines(lowerQuantile, lty = 2, col = "blue")
  lines(posteriorMean, lty = 1, col = "blue")
  
  legend(x = 100, y = 12, legend = c("Mean", "95% CI", "Observed"), lty = c(1,2,0), 
         pch = c(NA,NA,1), col = c("blue", "blue", "black"), cex = 1)
}
```


```{r}
plotPosteriorPredictivetw2(tw2_result4, "Model 5.3 Posterior")
```
